notifications:
  email: false
os: linux
language: python

python:
  - 3.8
  - 3.7
  - 3.6

sudo: required
services: docker

env:
  jobs:
    - DOCKER_IMAGE=manylinux1_x86_64
    - DOCKER_IMAGE=manylinux1_i686 PRE_CMD=linux32
    - DOCKER_IMAGE=manylinux2010_x86_64
  global:
    - secure: P6c1spkY+mxyZKX+OIaUzcoJLLfZCxBEj6e/ZVThO6u4IGOoFajceQ/iXsaXLtoBhSqkbVMNs1YWqGFD8MLhBvrTY3DRQAKvavT38Z1tM5Vd91KzSgZkNRbNMswRu09STop2Eb0rl9iK81i+Hgsq3KTXtbOMrMCqJtpKOlWasvF5ZrMmwS6DXyIPW4ow671O4s2yKtkfXt3NGiX+GBlTE4ed6BJcrZ072HVR2uCg4vb1kPB5CH3Mz+r7bbVU7EY8QsUke20ZtHX1c3NErN5RSHrbLKujIeo21gdntv8nVldVX5iYMbzStqJyBJ8tmesstv3XUfMkAHnB0CRdVLm1O2fVMDnYehEWxbtGbBBpcrOG/T3U4FPKffB3Ao0uIh+k2uqPBdP4mEcqd6rEo7PdSlC/p6zNnw+JpqdQ0utHwBhIbeELCi1pytKRbHI4G+7UlJZE+Tmw/BHnPDzQs9HjZVyzDjVarfS2xpdhrogGJlCkpxz3eXWN8WbsTdUExZaiFGeZ41TgIyaGaEkrMXA3iLJRzI3VfUAueSUt1VVq8KKHLa1qKt2vn0Dx/3oXTTRz4Nl9Z5sayi68XccVbyjbvv/0SDGQAvd/7/ZhlidW9xPbJtjc6CG6UWRTRkm6bSJQhQ1lq1VsYmPtzCqXqIVNXKINS/j3CvvKla0PejQp9U4=
    - secure: 22S/8zpvjldEjolbeMBLnq/0iXBKMVjFVqVYVEzZbBgdvnbhTWwa9B9mLVHhOwnl8RNFB2P0qTI+5pz8SqL9tf4G+hw/h0bG7OW8cSnMwyp07yNbZrn/9cxzrWhlQn3mLxeOFiNDM1eZ5BmTFJca3roF4KrZ3OVq59ibmCAhe8KY+TqOuf5600nGmDHtVtEQxApyIUUm9VQAKrj1Y0ihJGLF5RLSXODKXTGn2nEfRxrDDf2JYgZWrQ9cCkRC/NpNGpaaXyPC8SXp1UtPAKsDrfVjnh5iejMRLxWTy7oFkrM3DP8wCBCGeiVTyF02mOR0U5ykzd8ydkBeWgSQx1fCXKHXXyzzkqgLvYcnpfPY3UEXqjEO1OnWDsA8rbzgyvQzvuWDP35Yt221t6bo7uqcySMZl1QA+XEnXFVgAroY//7Owy5PNlX5HCWIl0xRBktBNfsZIy/Ff56eqglqL8nE5V4cqISqF5FYQwsO+kQWBFynQit2uUvphEc6ptJPng6qeOtDEd8roo5YcapfuVzphNzwQh713B8cfnAwFrgkfgOo52Ok1Qtn2/4t/97XghFe1Ui9oXgdQ++VZ4KiJgA/dlmXSTyWUI2+nTxSOjNVlv0VZodza85wF7dDFbLLYtziCqx+g+LQdaJFB3ww/ro/W9yLM9ze89xlxDfdR92Rz0M=
    - secure: oGZRRq2qRwO8UDimsfTwxiAhWYDKM/tR81AmTUaypra6qKJ/fU6dWjYrfQ7tw4BvRyR7wOCr2dV0J2D20G1e/QbtVASJzyU4crNcmz8p7Xe1ClVn6dPOEtp9cLjif4A0tMGZOxhEnb4gvv+yXKPUQRcSC3vgfPKVbHQJQuFGa87VpmXdwsKIIMNmq35rrjHdMbAhAsRaLYfXdeJynSvsshrmG1B5AvcIIQgTIHl+524500caX852O88vzzbyidP2eWTWz4ea3p+fpNtUahLHiQPi+oLjmqECbVdMi92qEuzySnIhjcxdItgwSa2IHCfStW+yPxvrcH7UWtOcjX9lM5+gPYsi0t6l6wuVObPVqigY9qCOfMhQtw2DZN9qRoVwQQeC9sGmyivK+hGYXSahtuGF+9C3AVT7SIsgRGqVWPh73r+laMCRnSfi1+hyBy7gKTsboT5hx+rFSVAzuNCoXooJTrMeM1QQEGOgfHNPrYR8idUnLRq2xMtsAgSN2NU0zQxDJV+CJFEZRq9Ly0JQCylLFtMRUDfH16jb6VMwtdkvfpMoDslkZ9me5p126J8vdSlgr7ceH1sM3wul8uILFT4ZVPNeVRyqFP1OFNQpa3YA+sXMzMzshEVDw4NVdolQcMoBC83UkzSsLJQUnOUEVh1mhuFdyVnQuWykndPS7Ac=
    - PROJECT_NAME=PyFastNER
    - GITHUB_REPO_NAME=jianlins/PyFastNER
    - CONDA_PKG_NAME_PY=PyFastNER
    - PYPI_LOGIN=jianlins
    - DEPLOY_TEST=true
    - secure: "N5VeOo+j9P8PEC2Qh/nBYniccWvrrzRw/AhR131c8qK4C6ZgUKGNa8zIfSp6syi0mQ16Z7rf57bsaPrcl6CXbRzUYaNs71xJexvqZHxs1FZXWqNDOdrM1VCuSE8msxzYhz8Gbt37KCJ1DIwFnZHH0860fTmLTmbjGSg/IK2AKH9Dewm81TkEzM6Yzu5saKasbfoR3wY0xsykubNFRJxEB4rseuZhjSfySfYHjiskjXFEfBIYHL6TjdnZcDdtuPnDuk9S0koB/enlGMqMhsKTe1ApZGvZcuYhmPhRydWxU2bjvwkkRcQEdTwOtiUBvi3D8i1FzNJoOWRWhDI5oAz81/bUAMYJSrZ1NpZ4JOOsD/HNfSO9r0DBJdEZAlKJ8uAJYa5IwJMAylSly+DL31k4VcG1unvHDDXMFG52rCLGzdtf/b7oVVh05lZxcvVFio31bfvjjZY8ugLOOywnwRyVgqWGNvJIld1PUGIjyyXKKxpFh7J8jOF8KsxfxU6l1dGEWRMnjTEPYdF1P1t+lOv8rFxRPYR1WIpZte7sGu2NSrJHGynWtx2uJOqMYFVAF3ZqXYtQ3QqbQTZAOZlzKCBXh+y4+lze8DKeGKc7TOtwC00R2E4A+KdxWG1OgePwrlxDUPz4pWYvS+4LLuxrkHgpMmY1fBLpAaXLQeSX1e+vcfg="



jobs:
  include:
     - name: "Python 3.6 on macOS"
       os: osx
       osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
       language: shell       # 'language: python' is an error on Travis CI macOS
       env: TRAVIS_PYTHON_VERSION=3.6
     - name: "Python 3.7 on macOS"
       os: osx
       osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
       language: shell       # 'language: python' is an error on Travis CI macOS
       env: TRAVIS_PYTHON_VERSION=3.7
     - name: "Python 3.8 on macOS"
       os: osx
       osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
       language: shell       # 'language: python' is an error on Travis CI macOS
       env: TRAVIS_PYTHON_VERSION=3.8

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      echo "Installing Miniconda";
      CONDA_PLATFORM=MacOSX;
      travis_retry wget -O miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-${CONDA_PLATFORM}-x86_64.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source "$HOME/miniconda/etc/profile.d/conda.sh";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda --version;
      conda info -a;
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pip;
    fi



install:
  - echo "TRAVIS_PYTHON_VERSION:$TRAVIS_PYTHON_VERSION";
  - echo "DOCKER_IMAGE:$DOCKER_IMAGE";
  - echo "$TRAVIS_OS_NAME:$TRAVIS_OS_NAME";
  - echo "PROJECT_NAME:$PROJECT_NAME"
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then  echo "dimg:$DOCKER_IMAGE;python:$TRAVIS_PYTHON_VERSION"; travis_retry docker pull quay.io/pypa/$DOCKER_IMAGE; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then  conda activate test-environment; conda install --quiet --yes nomkl --file=travis/osx_dev_requirements.txt; fi

before_script: ccache -s || true

script:
  - if [[ $TRAVIS_OS_NAME == linux ]]; then
        chmod 775 travis/build-wheels.sh;
        echo "TRAVIS_PYTHON_VERSION:$TRAVIS_PYTHON_VERSION";
        docker run --name "dk_$PLAT_$TRAVIS_PYTHON_VERSION" -v `pwd`:/io quay.io/pypa/$DOCKER_IMAGE $PRE_CMD /bin/sh -c "/io/travis/build-wheels.sh $DOCKER_IMAGE $PROJECT_NAME $TRAVIS_PYTHON_VERSION";
        pwd;
        echo "Inside wheelhouse"
        ls wheelhouse;
    fi

  - if [[ $TRAVIS_OS_NAME == osx ]]; then
        pip wheel ./ -w wheelhouse/; ls wheelhouse;
        pip install wheelhouse/$PROJECT_NAME*.whl --no-index -f
        pwd; ls;
        cp -R tests "$HOME"/tests;
        cd "$HOME";
        pwd ;
        nosetests tests;
        cd build/$GITHUB_REPO_NAME ;
        ls wheelhouse;
        for whl in wheelhouse/*.whl; do
            echo $whl;
            if [[ $whl == wheelhouse/${PROJECT_NAME}* ]]; then
                echo 'match..';
            else
                rm $whl;
            fi
        done;
        echo "after clean wheelhouse";
        ls wheelhouse;
    fi

before_deploy: pip install twine

deploy:
  # deploy develop to pypi.org
  - provider: script
    skip_cleanup: true
    script: pwd;ls; ls wheelhouse; python -m twine upload --skip-existing -u ${PYPI_LOGIN} -p ${PYPI_PWD} wheelhouse/${PROJECT_NAME}*;
    on:
      repo: ${GITHUB_REPO_NAME}
      tags: true
      condition: "$DEPLOY_TEST == false"

  # deploy develop to test.pypi.org
  - provider: script
    skip_cleanup: true
    script: pwd;ls; ls wheelhouse; python -m twine upload --skip-existing -u ${PYPI_LOGIN} -p ${PYPI_PWD} --repository-url https://test.pypi.org/legacy/ wheelhouse/${PROJECT_NAME}*;
    on:
      repo: ${GITHUB_REPO_NAME}
#       tags: true
      condition: "$DEPLOY_TEST == true"

